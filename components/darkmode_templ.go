// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

// DarkModeToggle - Toggle switch for dark/light mode
func DarkModeToggle() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div x-data=\"{\n\t\t\tdark: localStorage.getItem('theme') === 'dark' || (!localStorage.getItem('theme') && window.matchMedia('(prefers-color-scheme: dark)').matches),\n\t\t\ttoggle() {\n\t\t\t\tthis.dark = !this.dark;\n\t\t\t\tif (this.dark) {\n\t\t\t\t\tdocument.documentElement.classList.add('dark');\n\t\t\t\t\tlocalStorage.setItem('theme', 'dark');\n\t\t\t\t} else {\n\t\t\t\t\tdocument.documentElement.classList.remove('dark');\n\t\t\t\t\tlocalStorage.setItem('theme', 'light');\n\t\t\t\t}\n\t\t\t}\n\t\t}\" class=\"flex items-center gap-2\"><button @click=\"toggle()\" class=\"relative inline-flex h-6 w-11 items-center rounded-full transition-colors focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 dark:focus:ring-offset-gray-900\" :class=\"dark ? 'bg-indigo-600' : 'bg-gray-300'\" type=\"button\" role=\"switch\" :aria-checked=\"dark\"><span class=\"sr-only\">Toggle dark mode</span> <span class=\"inline-block h-4 w-4 transform rounded-full bg-white transition-transform\" :class=\"dark ? 'translate-x-6' : 'translate-x-1'\"></span></button> <span class=\"text-sm text-gray-700 dark:text-gray-300\"><span x-show=\"!dark\">Light</span> <span x-show=\"dark\">Dark</span></span></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
