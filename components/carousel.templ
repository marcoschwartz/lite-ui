package components

import "fmt"

// CarouselItem - Single item in carousel
type CarouselItem struct {
	ID      string
	Content templ.Component
	Image   string // Optional: direct image URL
	Alt     string // Alt text for image
}

// Carousel - Image/content carousel component
// Usage:
//   @ui.Carousel("my-carousel", items)
templ Carousel(id string, items []CarouselItem) {
	<div class="relative w-full" x-data={ "{ currentSlide: 0, totalSlides: " + fmt.Sprint(len(items)) + " }" }>
		<!-- Carousel Items -->
		<div class="relative overflow-hidden rounded-lg" style="aspect-ratio: 16/9;">
			for i, item := range items {
				<div
					x-cloak
					x-show={ "currentSlide === " + fmt.Sprint(i) }
					x-transition:enter="transition ease-out duration-300"
					x-transition:enter-start="opacity-0 transform translate-x-full"
					x-transition:enter-end="opacity-100 transform translate-x-0"
					x-transition:leave="transition ease-in duration-300"
					x-transition:leave-start="opacity-100 transform translate-x-0"
					x-transition:leave-end="opacity-0 transform -translate-x-full"
					class="absolute inset-0"
				>
					if item.Image != "" {
						<img src={ item.Image } alt={ item.Alt } class="w-full h-full object-cover"/>
					} else if item.Content != nil {
						<div class="w-full h-full flex items-center justify-center bg-gray-100 dark:bg-gray-800">
							@item.Content
						</div>
					}
				</div>
			}
		</div>
		<!-- Previous Button -->
		<button
			@click="currentSlide = currentSlide === 0 ? totalSlides - 1 : currentSlide - 1"
			class="absolute left-4 top-1/2 -translate-y-1/2 bg-white/80 dark:bg-gray-800/80 hover:bg-white dark:hover:bg-gray-700 text-gray-800 dark:text-gray-200 p-2 rounded-full shadow-lg transition-all"
			aria-label="Previous slide"
		>
			<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
				<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
			</svg>
		</button>
		<!-- Next Button -->
		<button
			@click="currentSlide = currentSlide === totalSlides - 1 ? 0 : currentSlide + 1"
			class="absolute right-4 top-1/2 -translate-y-1/2 bg-white/80 dark:bg-gray-800/80 hover:bg-white dark:hover:bg-gray-700 text-gray-800 dark:text-gray-200 p-2 rounded-full shadow-lg transition-all"
			aria-label="Next slide"
		>
			<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
				<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
			</svg>
		</button>
		<!-- Indicators -->
		<div class="absolute bottom-4 left-1/2 -translate-x-1/2 flex gap-2">
			for i := range items {
				<button
					x-cloak
					@click={ "currentSlide = " + fmt.Sprint(i) }
					class="w-2 h-2 rounded-full transition-all"
					:class={ "currentSlide === " + fmt.Sprint(i) + " ? 'bg-white w-8' : 'bg-white/50 hover:bg-white/75'" }
					aria-label={ "Go to slide " + fmt.Sprint(i+1) }
				></button>
			}
		</div>
	</div>
}
