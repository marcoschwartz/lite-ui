package components

// Toast - Notification toast component using Alpine.js
// Usage:
//   @ui.ToastContainer()  // Add once to your layout
//
//   // Trigger from button:
//   @ui.Button("Show Toast", ui.ButtonPrimary, templ.Attributes{
//       "@click": "window.dispatchEvent(new CustomEvent('show-toast', { detail: { message: 'Success!', variant: 'success' } }))",
//   })

// ToastContainer - Add this once to your layout (usually at the bottom of body)
templ ToastContainer() {
	<div
		x-data="{
			toasts: [],
			add(toast) {
				const id = Date.now();
				this.toasts.push({ id, ...toast });
				setTimeout(() => this.remove(id), toast.duration || 3000);
			},
			remove(id) {
				this.toasts = this.toasts.filter(t => t.id !== id);
			}
		}"
		@show-toast.window="add($event.detail)"
		class="fixed bottom-0 right-0 z-50 p-4 space-y-4 max-w-md w-full pointer-events-none"
	>
		<template x-for="toast in toasts" :key="toast.id">
			<div
				x-show="true"
				x-transition:enter="transform ease-out duration-300 transition"
				x-transition:enter-start="translate-y-2 opacity-0 sm:translate-y-0 sm:translate-x-2"
				x-transition:enter-end="translate-y-0 opacity-100 sm:translate-x-0"
				x-transition:leave="transition ease-in duration-100"
				x-transition:leave-start="opacity-100"
				x-transition:leave-end="opacity-0"
				class="pointer-events-auto w-full max-w-sm overflow-hidden rounded-lg shadow-lg ring-1 ring-black ring-opacity-5"
				:class="{
					'bg-white dark:bg-gray-800': toast.variant === 'info' || !toast.variant,
					'bg-green-50 dark:bg-green-900/20': toast.variant === 'success',
					'bg-yellow-50 dark:bg-yellow-900/20': toast.variant === 'warning',
					'bg-red-50 dark:bg-red-900/20': toast.variant === 'error'
				}"
			>
				<div class="p-4">
					<div class="flex items-start">
						<div class="flex-shrink-0">
							<template x-if="toast.variant === 'success'">
								<svg class="h-6 w-6 text-green-400 dark:text-green-500" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
									<path stroke-linecap="round" stroke-linejoin="round" d="M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
								</svg>
							</template>
							<template x-if="toast.variant === 'error'">
								<svg class="h-6 w-6 text-red-400 dark:text-red-500" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
									<path stroke-linecap="round" stroke-linejoin="round" d="M9.75 9.75l4.5 4.5m0-4.5l-4.5 4.5M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
								</svg>
							</template>
							<template x-if="toast.variant === 'warning'">
								<svg class="h-6 w-6 text-yellow-400 dark:text-yellow-500" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
									<path stroke-linecap="round" stroke-linejoin="round" d="M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z"></path>
								</svg>
							</template>
							<template x-if="toast.variant === 'info' || !toast.variant">
								<svg class="h-6 w-6 text-blue-400 dark:text-blue-500" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
									<path stroke-linecap="round" stroke-linejoin="round" d="M11.25 11.25l.041-.02a.75.75 0 011.063.852l-.708 2.836a.75.75 0 001.063.853l.041-.021M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9-3.75h.008v.008H12V8.25z"></path>
								</svg>
							</template>
						</div>
						<div class="ml-3 w-0 flex-1 pt-0.5">
							<p x-show="toast.title" x-text="toast.title" class="text-sm font-medium"
								:class="{
									'text-gray-900 dark:text-gray-100': toast.variant === 'info' || !toast.variant,
									'text-green-800 dark:text-green-100': toast.variant === 'success',
									'text-yellow-800 dark:text-yellow-100': toast.variant === 'warning',
									'text-red-800 dark:text-red-100': toast.variant === 'error'
								}"
							></p>
							<p x-text="toast.message" class="mt-1 text-sm"
								:class="{
									'text-gray-600 dark:text-gray-300': toast.variant === 'info' || !toast.variant,
									'text-green-700 dark:text-green-200': toast.variant === 'success',
									'text-yellow-700 dark:text-yellow-200': toast.variant === 'warning',
									'text-red-700 dark:text-red-200': toast.variant === 'error'
								}"
							></p>
						</div>
						<div class="ml-4 flex flex-shrink-0">
							<button
								@click="remove(toast.id)"
								type="button"
								class="inline-flex rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2"
								:class="{
									'text-gray-400 hover:text-gray-500 focus:ring-indigo-500': toast.variant === 'info' || !toast.variant,
									'text-green-500 hover:text-green-600 focus:ring-green-500': toast.variant === 'success',
									'text-yellow-500 hover:text-yellow-600 focus:ring-yellow-500': toast.variant === 'warning',
									'text-red-500 hover:text-red-600 focus:ring-red-500': toast.variant === 'error'
								}"
							>
								<span class="sr-only">Close</span>
								<svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
									<path d="M6.28 5.22a.75.75 0 00-1.06 1.06L8.94 10l-3.72 3.72a.75.75 0 101.06 1.06L10 11.06l3.72 3.72a.75.75 0 101.06-1.06L11.06 10l3.72-3.72a.75.75 0 00-1.06-1.06L10 8.94 6.28 5.22z"></path>
								</svg>
							</button>
						</div>
					</div>
				</div>
			</div>
		</template>
	</div>
}
