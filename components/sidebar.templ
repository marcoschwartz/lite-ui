package components

// SidebarItem is an alias for MenuItem for backward compatibility
type SidebarItem = MenuItem

// Sidebar - Responsive sidebar component with slot-based content
// Desktop: Fixed sidebar on the left
// Mobile: Collapsible drawer
// Accepts: header (logo), content (navigation/custom), footer (user info)
templ Sidebar(header templ.Component, content templ.Component, footer templ.Component) {
	<div x-data="{ mobileOpen: false }" @resize.window="if (window.innerWidth >= 1024) mobileOpen = false">
		<!-- Mobile Menu Button -->
		<div class="lg:hidden fixed top-4 left-4 z-50">
			<button
				@click="mobileOpen = !mobileOpen"
				class="p-2 rounded-md bg-white dark:bg-gray-800 text-gray-700 dark:text-gray-200 shadow-lg border border-gray-200 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors"
			>
				@IconMenu()
			</button>
		</div>

		<!-- Mobile Sidebar (Drawer) -->
		<div x-show="mobileOpen" class="lg:hidden">
			<!-- Overlay -->
			<div
				x-cloak
				x-show="mobileOpen"
				x-transition:enter="transition-opacity ease-linear duration-300"
				x-transition:enter-start="opacity-0"
				x-transition:enter-end="opacity-100"
				x-transition:leave="transition-opacity ease-linear duration-300"
				x-transition:leave-start="opacity-100"
				x-transition:leave-end="opacity-0"
				class="fixed inset-0 bg-black/50 backdrop-blur-sm z-40"
				@click="mobileOpen = false"
			></div>

			<!-- Drawer Panel -->
			<div
				x-cloak
				x-show="mobileOpen"
				x-transition:enter="transition ease-in-out duration-300 transform"
				x-transition:enter-start="-translate-x-full"
				x-transition:enter-end="translate-x-0"
				x-transition:leave="transition ease-in-out duration-300 transform"
				x-transition:leave-start="translate-x-0"
				x-transition:leave-end="-translate-x-full"
				class="fixed inset-y-0 left-0 z-50 w-64 bg-white dark:bg-gray-800 shadow-xl border-r border-gray-200 dark:border-gray-700"
			>
				@SidebarContent(header, content, footer, true)
			</div>
		</div>

		<!-- Desktop Sidebar -->
		<aside class="hidden lg:block fixed inset-y-0 left-0 w-64 bg-white dark:bg-gray-800 border-r border-gray-200 dark:border-gray-700 z-30">
			@SidebarContent(header, content, footer, false)
		</aside>
	</div>
}

// SidebarContent - The actual sidebar content (shared between mobile and desktop)
templ SidebarContent(header templ.Component, content templ.Component, footer templ.Component, isMobile bool) {
	<div class="flex flex-col h-full">
		<!-- Header Slot -->
		<div class="px-6 py-4 border-b border-gray-200 dark:border-gray-700">
			<div class="flex items-center justify-between">
				<div class="flex-1">
					@header
				</div>
				if isMobile {
					<button
						@click="mobileOpen = false"
						class="text-gray-400 dark:text-gray-500 hover:text-gray-500 dark:hover:text-gray-400 transition-colors lg:hidden ml-2"
					>
						<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
						</svg>
					</button>
				}
			</div>
		</div>

		<!-- Content Slot -->
		<div class="flex-1 overflow-y-auto pt-4"
			if isMobile {
				@click="mobileOpen = false"
			}
		>
			@content
		</div>

		<!-- Footer Slot -->
		if footer != nil {
			<div class="border-t border-gray-200 dark:border-gray-700">
				@footer
			</div>
		}
	</div>
}
