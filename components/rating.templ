package components

// Rating - Star rating component
// Usage:
//   @ui.Rating(5, 3, "rating", false, templ.Attributes{})  // 5 stars, 3 selected, read-only
//   @ui.Rating(5, 0, "rating", true, templ.Attributes{})   // 5 stars, interactive
templ Rating(maxStars int, selectedStars int, name string, interactive bool, attrs templ.Attributes) {
	<div class="flex items-center gap-1" { attrs... }>
		for i := 1; i <= maxStars; i++ {
			if interactive {
				<label class="cursor-pointer group">
					<input
						type="radio"
						name={ name }
						value={ string(rune(i + 48)) }
						class="sr-only peer"
						if i == selectedStars {
							checked
						}
					/>
					<svg
						class={ "w-6 h-6 transition-colors peer-checked:text-yellow-400 group-hover:text-yellow-400", templ.KV("text-yellow-400", i <= selectedStars), templ.KV("text-gray-300 dark:text-gray-600", i > selectedStars) }
						fill="currentColor"
						viewBox="0 0 20 20"
					>
						<path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
					</svg>
				</label>
			} else {
				<svg
					class={ "w-6 h-6", templ.KV("text-yellow-400", i <= selectedStars), templ.KV("text-gray-300 dark:text-gray-600", i > selectedStars) }
					fill="currentColor"
					viewBox="0 0 20 20"
				>
					<path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
				</svg>
			}
		}
	</div>
}
