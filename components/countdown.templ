package components

import (
	"fmt"
)

// Countdown - Countdown timer component
// Usage:
//   @ui.Countdown("2025-12-31T23:59:59", "lg")

// Countdown - Animated countdown timer
templ Countdown(targetDate string, size string) {
	<div
		x-data={
			fmt.Sprintf(`{
				targetDate: new Date('%s'),
				days: 0,
				hours: 0,
				minutes: 0,
				seconds: 0,
				updateCountdown() {
					const now = new Date();
					const difference = this.targetDate - now;

					if (difference > 0) {
						this.days = Math.floor(difference / (1000 * 60 * 60 * 24));
						this.hours = Math.floor((difference / (1000 * 60 * 60)) %% 24);
						this.minutes = Math.floor((difference / 1000 / 60) %% 60);
						this.seconds = Math.floor((difference / 1000) %% 60);
					} else {
						this.days = 0;
						this.hours = 0;
						this.minutes = 0;
						this.seconds = 0;
					}
				},
				init() {
					this.updateCountdown();
					setInterval(() => this.updateCountdown(), 1000);
				}
			}`, targetDate),
		}
		class="flex gap-4"
	>
		<!-- Days -->
		<div class="flex flex-col items-center">
			<div
				class={
					"bg-indigo-600 dark:bg-indigo-500 text-white rounded-lg flex items-center justify-center font-mono font-bold shadow-lg",
					templ.KV("w-12 h-12 text-xl", size == "sm"),
					templ.KV("w-16 h-16 text-2xl", size == "md" || size == ""),
					templ.KV("w-24 h-24 text-4xl", size == "lg"),
				}
			>
				<span x-text="String(days).padStart(2, '0')"></span>
			</div>
			<span
				class={
					"mt-2 text-gray-600 dark:text-gray-400 font-medium",
					templ.KV("text-xs", size == "sm"),
					templ.KV("text-sm", size == "md" || size == ""),
					templ.KV("text-base", size == "lg"),
				}
			>
				Days
			</span>
		</div>
		<!-- Hours -->
		<div class="flex flex-col items-center">
			<div
				class={
					"bg-indigo-600 dark:bg-indigo-500 text-white rounded-lg flex items-center justify-center font-mono font-bold shadow-lg",
					templ.KV("w-12 h-12 text-xl", size == "sm"),
					templ.KV("w-16 h-16 text-2xl", size == "md" || size == ""),
					templ.KV("w-24 h-24 text-4xl", size == "lg"),
				}
			>
				<span x-text="String(hours).padStart(2, '0')"></span>
			</div>
			<span
				class={
					"mt-2 text-gray-600 dark:text-gray-400 font-medium",
					templ.KV("text-xs", size == "sm"),
					templ.KV("text-sm", size == "md" || size == ""),
					templ.KV("text-base", size == "lg"),
				}
			>
				Hours
			</span>
		</div>
		<!-- Minutes -->
		<div class="flex flex-col items-center">
			<div
				class={
					"bg-indigo-600 dark:bg-indigo-500 text-white rounded-lg flex items-center justify-center font-mono font-bold shadow-lg",
					templ.KV("w-12 h-12 text-xl", size == "sm"),
					templ.KV("w-16 h-16 text-2xl", size == "md" || size == ""),
					templ.KV("w-24 h-24 text-4xl", size == "lg"),
				}
			>
				<span x-text="String(minutes).padStart(2, '0')"></span>
			</div>
			<span
				class={
					"mt-2 text-gray-600 dark:text-gray-400 font-medium",
					templ.KV("text-xs", size == "sm"),
					templ.KV("text-sm", size == "md" || size == ""),
					templ.KV("text-base", size == "lg"),
				}
			>
				Minutes
			</span>
		</div>
		<!-- Seconds -->
		<div class="flex flex-col items-center">
			<div
				class={
					"bg-indigo-600 dark:bg-indigo-500 text-white rounded-lg flex items-center justify-center font-mono font-bold shadow-lg",
					templ.KV("w-12 h-12 text-xl", size == "sm"),
					templ.KV("w-16 h-16 text-2xl", size == "md" || size == ""),
					templ.KV("w-24 h-24 text-4xl", size == "lg"),
				}
			>
				<span x-text="String(seconds).padStart(2, '0')"></span>
			</div>
			<span
				class={
					"mt-2 text-gray-600 dark:text-gray-400 font-medium",
					templ.KV("text-xs", size == "sm"),
					templ.KV("text-sm", size == "md" || size == ""),
					templ.KV("text-base", size == "lg"),
				}
			>
				Seconds
			</span>
		</div>
	</div>
}
