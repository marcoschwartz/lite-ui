// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"fmt"
)

// Calendar - Interactive calendar component with Alpine.js
// Usage:
//
//	@ui.Calendar("appointment_date", "2025-10-15")
func Calendar(name string, selectedDate string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div x-data=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 string
		templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf(`{
				currentMonth: new Date('%s' || new Date()),
				selectedDate: '%s',
				get monthYear() {
					return this.currentMonth.toLocaleDateString('en-US', { month: 'long', year: 'numeric' });
				},
				get daysInMonth() {
					const year = this.currentMonth.getFullYear();
					const month = this.currentMonth.getMonth();
					const firstDay = new Date(year, month, 1).getDay();
					const lastDate = new Date(year, month + 1, 0).getDate();
					const prevLastDate = new Date(year, month, 0).getDate();

					let days = [];

					// Previous month days
					for (let i = firstDay - 1; i >= 0; i--) {
						days.push({ day: prevLastDate - i, isCurrentMonth: false, isPrevMonth: true });
					}

					// Current month days
					for (let i = 1; i <= lastDate; i++) {
						const dateStr = year + '-' + String(month + 1).padStart(2, '0') + '-' + String(i).padStart(2, '0');
						const dayOfWeek = new Date(year, month, i).getDay();
						days.push({
							day: i,
							isCurrentMonth: true,
							isWeekend: dayOfWeek === 0 || dayOfWeek === 6,
							dateStr: dateStr,
							isSelected: this.selectedDate === dateStr
						});
					}

					// Next month days
					const remaining = 42 - days.length; // 6 rows * 7 days
					for (let i = 1; i <= remaining; i++) {
						days.push({ day: i, isCurrentMonth: false, isNextMonth: true });
					}

					return days;
				},
				prevMonth() {
					this.currentMonth = new Date(this.currentMonth.getFullYear(), this.currentMonth.getMonth() - 1);
				},
				nextMonth() {
					this.currentMonth = new Date(this.currentMonth.getFullYear(), this.currentMonth.getMonth() + 1);
				},
				selectDate(dateStr) {
					this.selectedDate = dateStr;
					document.getElementById('%s').value = dateStr;
					document.getElementById('%s').dispatchEvent(new Event('change'));
					window.dispatchEvent(new CustomEvent('date-selected', { detail: { name: '%s', date: dateStr } }));
				}
			}`, selectedDate, selectedDate, name, name, name),
		)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `calendar.templ`, Line: 67, Col: 2}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "\" class=\"bg-white dark:bg-gray-800 rounded-lg shadow-lg p-4 w-full max-w-sm\"><!-- Hidden input to store selected date --><input type=\"hidden\" id=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var3 string
		templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(name)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `calendar.templ`, Line: 71, Col: 32}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "\" name=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var4 string
		templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(name)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `calendar.templ`, Line: 71, Col: 46}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "\" value=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var5 string
		templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(selectedDate)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `calendar.templ`, Line: 71, Col: 69}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "\"><!-- Header with month/year and navigation --><div class=\"flex items-center justify-between mb-4\"><button @click=\"prevMonth()\" type=\"button\" class=\"p-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors\"><svg class=\"w-5 h-5 text-gray-700 dark:text-gray-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 19l-7-7 7-7\"></path></svg></button><h3 class=\"text-lg font-semibold text-gray-900 dark:text-gray-100\" x-text=\"monthYear\"></h3><button @click=\"nextMonth()\" type=\"button\" class=\"p-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors\"><svg class=\"w-5 h-5 text-gray-700 dark:text-gray-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 5l7 7-7 7\"></path></svg></button></div><!-- Day labels --><div class=\"grid grid-cols-7 gap-1 mb-2\"><div class=\"text-center text-xs font-medium text-gray-500 dark:text-gray-400 py-2\">Mo</div><div class=\"text-center text-xs font-medium text-gray-500 dark:text-gray-400 py-2\">Tu</div><div class=\"text-center text-xs font-medium text-gray-500 dark:text-gray-400 py-2\">We</div><div class=\"text-center text-xs font-medium text-gray-500 dark:text-gray-400 py-2\">Th</div><div class=\"text-center text-xs font-medium text-gray-500 dark:text-gray-400 py-2\">Fr</div><div class=\"text-center text-xs font-medium text-gray-500 dark:text-gray-400 py-2\">Sa</div><div class=\"text-center text-xs font-medium text-gray-500 dark:text-gray-400 py-2\">Su</div></div><!-- Calendar grid --><div class=\"grid grid-cols-7 gap-1\"><template x-for=\"(dayObj, index) in daysInMonth\" :key=\"index\"><button @click=\"dayObj.isCurrentMonth && selectDate(dayObj.dateStr)\" type=\"button\" :disabled=\"!dayObj.isCurrentMonth\" class=\"aspect-square flex items-center justify-center text-sm rounded-lg transition-colors\" :class=\"{\n\t\t\t\t\t\t'text-gray-400 dark:text-gray-600': !dayObj.isCurrentMonth,\n\t\t\t\t\t\t'text-gray-900 dark:text-gray-100 hover:bg-gray-100 dark:hover:bg-gray-700': dayObj.isCurrentMonth && !dayObj.isSelected,\n\t\t\t\t\t\t'text-red-500 dark:text-red-400': dayObj.isCurrentMonth && dayObj.isWeekend && !dayObj.isSelected,\n\t\t\t\t\t\t'bg-indigo-600 text-white hover:bg-indigo-700': dayObj.isSelected,\n\t\t\t\t\t\t'cursor-pointer': dayObj.isCurrentMonth,\n\t\t\t\t\t\t'cursor-default': !dayObj.isCurrentMonth\n\t\t\t\t\t}\" x-text=\"dayObj.day\"></button></template></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
