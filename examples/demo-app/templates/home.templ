package templates

import ui "github.com/marcoschwartz/lite-ui/components"

templ Home() {
	@Layout("Home") {
		<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
			<!-- Hero Section -->
			<div class="text-center mb-12">
				<h1 class="text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4">
					Welcome to Lite UI
				</h1>
				<p class="text-xl text-gray-600 dark:text-gray-400 mb-8">
					A lightweight UI component library for Go + Templ applications
				</p>
				<div class="flex gap-4 justify-center">
					@ui.Button("View Components", ui.ButtonPrimary, templ.Attributes{
						"hx-get": "/components",
						"hx-target": "body",
						"hx-swap": "outerHTML transition:true",
						"hx-push-url": "true",
					})
					@ui.Button("GitHub", ui.ButtonSecondary, templ.Attributes{})
				</div>
			</div>
			<!-- Stats -->
			<div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-12">
				@ui.Card(ui.CardConfig{
					Variant: "stat",
					StatLabel: "Components",
					StatValue: "51",
					StatIcon: ui.IconFolder(),
					StatColor: "indigo",
				}, nil)
				@ui.Card(ui.CardConfig{
					Variant: "stat",
					StatLabel: "Zero Dependencies",
					StatValue: "100%",
					StatIcon: ui.IconCheck("green"),
					StatColor: "green",
				}, nil)
				@ui.Card(ui.CardConfig{
					Variant: "stat",
					StatLabel: "Type Safe",
					StatValue: "Go",
					StatIcon: ui.IconSettings(),
					StatColor: "blue",
				}, nil)
				@ui.Card(ui.CardConfig{
					Variant: "stat",
					StatLabel: "Dark Mode",
					StatValue: "Yes",
					StatIcon: ui.IconTrending("purple"),
					StatColor: "purple",
				}, nil)
			</div>
			<!-- Features -->
			<div class="grid grid-cols-1 md:grid-cols-3 gap-6">
				@ui.Card(ui.CardConfig{Title: "Forms"}, FeatureContent("Complete form components including buttons, inputs, selects, checkboxes, and more."))
				@ui.Card(ui.CardConfig{Title: "Layout"}, FeatureContent("Flexible layout components like cards, sidebars, modals, and navbars."))
				@ui.Card(ui.CardConfig{Title: "Data Display"}, FeatureContent("Tables, pagination, badges, avatars, and timeline components."))
			</div>
		</div>
	}
}

templ FeatureContent(text string) {
	<p class="text-gray-600 dark:text-gray-400">{ text }</p>
}
