package templates

import ui "github.com/marcoschwartz/lite-ui/components"

templ NavigationPage() {
	@Layout("Navigation") {
		<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
			<h1 class="text-3xl font-bold text-gray-900 dark:text-gray-100 mb-8">Navigation Components</h1>

			<!-- Breadcrumbs -->
			<div class="mb-8">
				@ui.Card(ui.CardConfig{Title: "Breadcrumbs"}, BreadcrumbsDemo())
			</div>

			<!-- Tabs -->
			<div class="mb-8">
				@ui.Card(ui.CardConfig{Title: "Tabs"}, TabsDemo())
			</div>

			<!-- Pagination -->
			<div class="mb-8">
				@ui.Card(ui.CardConfig{Title: "Pagination"}, PaginationDemo())
			</div>

			<!-- Stepper -->
			<div class="mb-8">
				@ui.Card(ui.CardConfig{Title: "Stepper"}, StepperDemo())
			</div>

			<!-- Menu -->
			<div class="mb-8">
				@ui.Card(ui.CardConfig{Title: "Menu"}, MenuDemo())
			</div>

			<!-- Menu with Sections -->
			<div class="mb-8">
				@ui.Card(ui.CardConfig{Title: "Menu with Sections"}, MenuSectionsDemo())
			</div>

			<!-- Dropdown & Navbar -->
			<div class="mb-8 grid grid-cols-1 md:grid-cols-2 gap-6">
				@ui.Card(ui.CardConfig{Title: "Dropdown"}, DropdownDemo())
				@ui.Card(ui.CardConfig{Title: "Navbar"}, NavbarPreview())
			</div>

			<!-- FAB & Speed Dial -->
			<div class="mb-8">
				@ui.Card(ui.CardConfig{Title: "Floating Action Buttons"}, FABDemo())
			</div>

			<!-- Link Component -->
			<div class="mb-8">
				@ui.Card(ui.CardConfig{Title: "Link Component (SPA Navigation)"}, LinkDemo())
			</div>
		</div>
		@ui.SpeedDial(GetSpeedDialActions())
	}
}

templ BreadcrumbsDemo() {
	@ui.Breadcrumbs([]ui.Breadcrumb{
		{Label: "Home", Href: "/"},
		{Label: "Navigation", Href: "/navigation"},
		{Label: "Current Page", Href: "#"},
	})
}

templ TabsDemo() {
	@ui.Tabs("nav-tabs", []ui.Tab{
		{ID: "forms", Label: "Forms", Content: TabFormsContent()},
		{ID: "display", Label: "Data Display", Content: TabDataDisplayContent()},
		{ID: "feedback", Label: "Feedback", Content: TabFeedbackContent()},
		{ID: "layout", Label: "Layout", Content: TabLayoutContent()},
	})
}

templ TabFormsContent() {
	<div class="space-y-6">
		<div class="grid grid-cols-1 md:grid-cols-2 gap-6">
			<!-- Text Inputs -->
			<div>
				@ui.TextInput("Email", "email", "email", "Enter your email", true, templ.Attributes{})
			</div>
			<div>
				@ui.TextInput("Password", "password", "password", "Enter password", true, templ.Attributes{})
			</div>
		</div>

		<!-- TextArea -->
		<div>
			@ui.TextArea("Description", "description", "Enter a description...", 4, false, templ.Attributes{})
		</div>

		<!-- Select -->
		<div>
			@ui.Select("Country", "country", "Select a country", false, []ui.SelectOption{
				{Value: "us", Label: "United States"},
				{Value: "uk", Label: "United Kingdom"},
				{Value: "ca", Label: "Canada"},
			})
		</div>

		<!-- Checkboxes and Switch -->
		<div class="grid grid-cols-1 md:grid-cols-2 gap-6">
			<div class="space-y-3">
				@ui.Checkbox("Accept terms and conditions", "terms", false, templ.Attributes{})
				@ui.Checkbox("Subscribe to newsletter", "newsletter", true, templ.Attributes{})
			</div>
			<div class="space-y-3">
				@ui.Switch("notifications", "Enable notifications", "Receive push notifications", true, templ.Attributes{})
				@ui.Toggle("Dark mode", "theme", false, templ.Attributes{})
			</div>
		</div>

		<!-- Buttons -->
		<div class="flex gap-3">
			@ui.Button("Primary", ui.ButtonPrimary, templ.Attributes{})
			@ui.Button("Secondary", ui.ButtonSecondary, templ.Attributes{})
			@ui.Button("Success", ui.ButtonSuccess, templ.Attributes{})
			@ui.Button("Danger", ui.ButtonDanger, templ.Attributes{})
		</div>
	</div>
}

templ TabDataDisplayContent() {
	<div class="space-y-6">
		<!-- Badges -->
		<div>
			<h4 class="text-sm font-medium text-gray-700 dark:text-gray-300 mb-3">Badges</h4>
			<div class="flex flex-wrap gap-2">
				@ui.Badge("Active", "green")
				@ui.Badge("Pending", "yellow")
				@ui.Badge("Error", "red")
				@ui.Badge("Info", "blue")
				@ui.Badge("Default", "gray")
			</div>
		</div>

		<!-- Avatars -->
		<div>
			<h4 class="text-sm font-medium text-gray-700 dark:text-gray-300 mb-3">Avatars</h4>
			<div class="flex items-center gap-3">
				@ui.Avatar("https://i.pravatar.cc/150?img=1", "User 1", "xs")
				@ui.Avatar("https://i.pravatar.cc/150?img=2", "User 2", "sm")
				@ui.Avatar("https://i.pravatar.cc/150?img=3", "User 3", "md")
				@ui.Avatar("https://i.pravatar.cc/150?img=4", "User 4", "lg")
				@ui.Avatar("https://i.pravatar.cc/150?img=5", "User 5", "xl")
			</div>
		</div>

		<!-- Mini Table -->
		<div>
			<h4 class="text-sm font-medium text-gray-700 dark:text-gray-300 mb-3">Table Example</h4>
			@ui.Table([]string{"Name", "Status", "Role"}, TabTableRows())
		</div>

		<!-- Timeline -->
		<div>
			<h4 class="text-sm font-medium text-gray-700 dark:text-gray-300 mb-3">Timeline</h4>
			@ui.Timeline([]ui.TimelineItem{
				{Title: "Order placed", Description: "Your order was placed", Time: "2h ago", Icon: ui.IconCheck("green"), Color: "green"},
				{Title: "Processing", Description: "Order is being processed", Time: "1h ago", Icon: ui.IconClock(), Color: "blue"},
			})
		</div>
	</div>
}

templ TabTableRows() {
	<tr>
		<td class="px-6 py-4 text-gray-900 dark:text-gray-100">John Doe</td>
		<td class="px-6 py-4">@ui.Badge("Active", "green")</td>
		<td class="px-6 py-4 text-gray-900 dark:text-gray-100">Admin</td>
	</tr>
	<tr>
		<td class="px-6 py-4 text-gray-900 dark:text-gray-100">Jane Smith</td>
		<td class="px-6 py-4">@ui.Badge("Away", "yellow")</td>
		<td class="px-6 py-4 text-gray-900 dark:text-gray-100">User</td>
	</tr>
}

templ TabFeedbackContent() {
	<div class="space-y-6">
		<!-- Alerts -->
		<div class="space-y-3">
			@ui.Alert("success", "Success", "This is a success message!", true)
			@ui.Alert("info", "Information", "This is an info message!", true)
			@ui.Alert("warning", "Warning", "This is a warning message!", true)
			@ui.Alert("error", "Error", "This is an error message!", true)
		</div>

		<!-- Progress Bars -->
		<div class="space-y-4">
			<div>
				<h4 class="text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Progress Indicators</h4>
				@ui.Progress(25, 100, "md", "indigo", true)
			</div>
			<div>
				@ui.Progress(50, 100, "md", "green", true)
			</div>
			<div>
				@ui.Progress(75, 100, "md", "yellow", true)
			</div>
			<div>
				@ui.Progress(100, 100, "md", "red", true)
			</div>
		</div>

		<!-- Loading States -->
		<div>
			<h4 class="text-sm font-medium text-gray-700 dark:text-gray-300 mb-3">Loading Spinners</h4>
			<div class="flex items-center gap-4">
				@ui.Loading("sm", "indigo")
				@ui.Loading("md", "green")
				@ui.Loading("lg", "blue")
			</div>
		</div>

		<!-- Slider -->
		<div>
			<h4 class="text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Slider</h4>
			@ui.Slider("Volume", "volume", 0, 100, 50, 1, templ.Attributes{})
		</div>
	</div>
}

templ TabLayoutContent() {
	<div class="space-y-6">
		<!-- Stat Cards -->
		<div class="grid grid-cols-1 md:grid-cols-3 gap-4">
			@ui.Card(ui.CardConfig{
				Variant:   "stat",
				StatLabel: "Total Users",
				StatValue: "2,543",
				StatIcon:  ui.IconUsers("indigo"),
				StatColor: "indigo",
			}, nil)

			@ui.Card(ui.CardConfig{
				Variant:   "stat",
				StatLabel: "Revenue",
				StatValue: "$12,345",
				StatIcon:  ui.IconCurrency("green"),
				StatColor: "green",
			}, nil)

			@ui.Card(ui.CardConfig{
				Variant:   "stat",
				StatLabel: "Growth",
				StatValue: "+24%",
				StatIcon:  ui.IconTrending("purple"),
				StatColor: "purple",
			}, nil)
		</div>

		<!-- Regular Cards -->
		<div class="grid grid-cols-1 md:grid-cols-2 gap-4">
			@ui.Card(ui.CardConfig{
				Title: "Card with Header",
			}, CardExampleContent())

			@ui.Card(ui.CardConfig{
				Title:        "Card with Action",
				HeaderAction: CardHeaderAction(),
			}, CardExampleContent())
		</div>

		<!-- Divider -->
		<div>
			@ui.Divider("horizontal", "Layout Components")
		</div>

		<!-- Accordion -->
		<div>
			@ui.Accordion([]ui.AccordionItem{
				{ID: "acc1", Title: "What is Lite UI?", Content: AccordionContent1()},
				{ID: "acc2", Title: "How to install?", Content: AccordionContent2()},
				{ID: "acc3", Title: "Is it free?", Content: AccordionContent3()},
			}, false)
		</div>
	</div>
}

templ CardExampleContent() {
	<p class="text-gray-600 dark:text-gray-400">This is example card content with some text to demonstrate the card component.</p>
}

templ CardHeaderAction() {
	@ui.Button("Edit", ui.ButtonSecondary, templ.Attributes{"class": "text-sm px-3 py-1"})
}

templ AccordionContent1() {
	<p class="text-gray-600 dark:text-gray-400">Lite UI is a lightweight UI component library for Go + Templ applications with 41 production-ready components.</p>
}

templ AccordionContent2() {
	<p class="text-gray-600 dark:text-gray-400">Run: <code class="px-2 py-1 bg-gray-100 dark:bg-gray-800 rounded">go get github.com/marcoschwartz/lite-ui@latest</code></p>
}

templ AccordionContent3() {
	<p class="text-gray-600 dark:text-gray-400">Yes! Lite UI is completely free and open source under the MIT license.</p>
}

templ PaginationDemo() {
	@ui.Pagination(ui.PaginationConfig{
		CurrentPage: 2,
		TotalPages:  5,
		TotalItems:  48,
		PerPage:     10,
		BasePath:    "/navigation",
	})
}

templ StepperDemo() {
	@ui.Stepper([]ui.Step{
		{Label: "Account"},
		{Label: "Profile"},
		{Label: "Preferences"},
		{Label: "Done"},
	}, 1)
}

templ DropdownDemo() {
	@ui.Dropdown(
		"Menu",
		[]ui.DropdownItem{
			{Label: "Profile", Href: "#"},
			{Label: "Settings", Href: "#"},
			{Label: "Sign out", Href: "#"},
		},
	)
}

templ MenuDemo() {
	@ui.Menu([]ui.MenuItem{
		{Label: "Dashboard", Href: "#", Icon: ui.IconHome(), Active: true},
		{Label: "Projects", Href: "#", Icon: ui.IconFolder(), Badge: "12"},
		{Label: "Team", Href: "#", Icon: ui.IconUsers("gray")},
		{Label: "Settings", Href: "#", Icon: ui.IconSettings()},
	}, "vertical")
}

templ MenuSectionsDemo() {
	<div class="space-y-4">
		@ui.MenuTitle("Main")
		@ui.Menu([]ui.MenuItem{
			{Label: "Dashboard", Href: "#", Icon: ui.IconHome(), Active: true},
			{Label: "Analytics", Href: "#", Icon: ui.IconChart("gray")},
		}, "vertical")

		@ui.MenuDivider()

		@ui.MenuTitle("Settings")
		@ui.Menu([]ui.MenuItem{
			{Label: "Account", Href: "#", Icon: ui.IconSettings()},
			{Label: "Team", Href: "#", Icon: ui.IconUsers("gray")},
			{Label: "Billing", Href: "#", Icon: ui.IconCurrency("gray"), Badge: "New"},
		}, "vertical")
	</div>
}

templ NavbarPreview() {
	<p class="text-sm text-gray-600 dark:text-gray-400">See the navbar at the top of this page for a live example.</p>
}

templ FABDemo() {
	<div class="space-y-6">
		<div>
			<h3 class="text-sm font-medium text-gray-900 dark:text-gray-100 mb-3">Simple FAB</h3>
			<p class="text-sm text-gray-600 dark:text-gray-400 mb-3">
				A single floating action button (note: the FAB component uses fixed positioning).
			</p>
			<div class="relative h-32 bg-gray-100 dark:bg-gray-800 rounded-lg">
				<div class="absolute bottom-4 right-4">
					@ui.FAB(ui.IconPlus(), templ.Attributes{})
				</div>
			</div>
		</div>
		<div>
			<h3 class="text-sm font-medium text-gray-900 dark:text-gray-100 mb-3">Speed Dial (Live)</h3>
			<p class="text-sm text-gray-600 dark:text-gray-400">
				See the speed dial in the bottom-right corner of this page (click to expand).
			</p>
		</div>
	</div>
}

func GetSpeedDialActions() []ui.SpeedDialAction {
	return []ui.SpeedDialAction{
		{
			Label: "Create New",
			Icon:  ui.IconPlus(),
			Attrs: templ.Attributes{"onclick": "alert('Create new item')"},
		},
		{
			Label: "Settings",
			Icon:  ui.IconSettings(),
			Attrs: templ.Attributes{"onclick": "alert('Open settings')"},
		},
		{
			Label: "Help",
			Icon:  ui.IconHome(),
			Attrs: templ.Attributes{"onclick": "alert('Show help')"},
		},
	}
}

templ LinkDemo() {
	<div class="space-y-6">
		<!-- Simple Text Link -->
		<div>
			<h3 class="text-sm font-medium text-gray-900 dark:text-gray-100 mb-3">Simple Text Link (SPA)</h3>
			<p class="text-sm text-gray-600 dark:text-gray-400 mb-2">
				Navigate to
				@ui.Link("/", templ.Attributes{"class": "text-blue-600 dark:text-blue-400 hover:underline"}) {
					Home
				}
				or
				@ui.Link("/icons", templ.Attributes{"class": "text-blue-600 dark:text-blue-400 hover:underline"}) {
					Icons page
				}
				with smooth SPA navigation.
			</p>
		</div>

		<!-- Link with Icon -->
		<div>
			<h3 class="text-sm font-medium text-gray-900 dark:text-gray-100 mb-3">Link with Icon</h3>
			@ui.Link("/feedback", templ.Attributes{"class": "inline-flex items-center gap-2 text-indigo-600 dark:text-indigo-400 hover:underline"}) {
				@ui.IconCheck("indigo")
				<span>View Feedback Components</span>
			}
		</div>

		<!-- Button as Link -->
		<div>
			<h3 class="text-sm font-medium text-gray-900 dark:text-gray-100 mb-3">Button as Link</h3>
			<div class="flex gap-3">
				@ui.Link("/inputs", templ.Attributes{}) {
					@ui.Button("Go to Forms", ui.ButtonPrimary, templ.Attributes{})
				}
				@ui.Link("/layout", templ.Attributes{}) {
					@ui.Button("View Layouts", ui.ButtonSecondary, templ.Attributes{})
				}
			</div>
		</div>

		<!-- Card as Link -->
		<div>
			<h3 class="text-sm font-medium text-gray-900 dark:text-gray-100 mb-3">Card as Link (Clickable Card)</h3>
			@ui.Link("/data-display", templ.Attributes{"class": "block hover:shadow-lg transition-shadow"}) {
				@ui.Card(ui.CardConfig{
					Variant:   "stat",
					StatLabel: "Data Display",
					StatValue: "5+",
					StatIcon:  ui.IconFolder(),
					StatColor: "blue",
				}, nil)
			}
		</div>

		<!-- External Link -->
		<div>
			<h3 class="text-sm font-medium text-gray-900 dark:text-gray-100 mb-3">External Link (No SPA)</h3>
			@ui.Link("https://github.com/marcoschwartz/lite-ui", templ.Attributes{
				"external": "true",
				"target":   "_blank",
				"rel":      "noopener noreferrer",
				"class":    "inline-flex items-center gap-2 text-blue-600 dark:text-blue-400 hover:underline",
			}) {
				<span>View on GitHub</span>
				<svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
					<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
				</svg>
			}
		</div>

		<!-- Usage Note -->
		<div class="mt-6 p-4 bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg">
			<h4 class="text-sm font-semibold text-blue-900 dark:text-blue-100 mb-2">💡 Usage</h4>
			<div class="text-xs text-blue-800 dark:text-blue-200 bg-white dark:bg-gray-900 p-3 rounded overflow-x-auto font-mono">
				<code>@ui.Link("/path", templ.Attributes{}) { ... }</code>
			</div>
			<p class="text-xs text-blue-700 dark:text-blue-300 mt-2">
				All links above use SPA navigation (no page refresh) except the external link!
			</p>
		</div>
	</div>
}
