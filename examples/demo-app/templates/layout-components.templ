package templates

import ui "github.com/marcoschwartz/lite-ui/components"

templ LayoutComponentsPage() {
	@Layout("Layout & Display") {
		<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
			<h1 class="text-3xl font-bold text-gray-900 dark:text-gray-100 mb-8">Layout & Display Components</h1>

			<!-- Cards -->
			<div class="mb-8">
				<h2 class="text-xl font-semibold text-gray-900 dark:text-gray-100 mb-4">Cards</h2>
				<div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-6">
					@ui.Card(ui.CardConfig{Variant: "stat", StatLabel: "Total Users", StatValue: "2,345", StatIcon: ui.IconUsers("indigo"), StatColor: "indigo"}, nil)
					@ui.Card(ui.CardConfig{Variant: "stat", StatLabel: "Revenue", StatValue: "$12.5k", StatIcon: ui.IconCurrency("green"), StatColor: "green"}, nil)
					@ui.Card(ui.CardConfig{Variant: "stat", StatLabel: "Projects", StatValue: "42", StatIcon: ui.IconFolder(), StatColor: "blue"}, nil)
					@ui.Card(ui.CardConfig{Variant: "stat", StatLabel: "Growth", StatValue: "+15%", StatIcon: ui.IconTrending("purple"), StatColor: "purple"}, nil)
				</div>
				<div class="grid grid-cols-1 md:grid-cols-2 gap-6">
					@ui.Card(ui.CardConfig{Title: "Card with Header"}, SimpleCardContent())
					@ui.Card(ui.CardConfig{}, SimpleCardContent())
				</div>
			</div>

			<!-- Dividers -->
			<div class="mb-8">
				@ui.Card(ui.CardConfig{Title: "Dividers"}, DividersDemo())
			</div>

			<!-- Accordion -->
			<div class="mb-8">
				@ui.Card(ui.CardConfig{Title: "Accordion"}, AccordionDemo())
			</div>

			<!-- Modals & Drawers -->
			<div class="mb-8 grid grid-cols-1 md:grid-cols-2 gap-6">
				@ui.Card(ui.CardConfig{Title: "Modal"}, ModalDemo())
				@ui.Card(ui.CardConfig{Title: "Drawer"}, DrawerDemo())
			</div>

			<!-- Table -->
			<div class="mb-8">
				@ui.Card(ui.CardConfig{Title: "Table"}, TableDemo())
			</div>

			<!-- Timeline -->
			<div class="mb-8">
				@ui.Card(ui.CardConfig{Title: "Timeline"}, TimelineDemo())
			</div>

			<!-- Avatar -->
			<div class="mb-8">
				@ui.Card(ui.CardConfig{Title: "Avatars"}, AvatarsDemo())
			</div>

			<!-- Hero Sections -->
			<div class="mb-8">
				<h2 class="text-xl font-semibold text-gray-900 dark:text-gray-100 mb-4">Hero Sections</h2>
				@ui.Card(ui.CardConfig{Title: "Hero Examples"}, HeroDemo())
			</div>

			<!-- Footer -->
			<div class="mb-8">
				@ui.Card(ui.CardConfig{Title: "Footer"}, FooterDemo())
			</div>

			<!-- Collapse -->
			<div class="mb-8">
				@ui.Card(ui.CardConfig{Title: "Collapse"}, CollapseDemo())
			</div>
		</div>
	}
}

templ SimpleCardContent() {
	<p class="text-gray-600 dark:text-gray-400">This is a card component with content inside.</p>
}

templ DividersDemo() {
	<div class="space-y-6">
		<div>
			<p class="text-sm text-gray-600 dark:text-gray-400 mb-2">Simple horizontal divider:</p>
			@ui.Divider("horizontal", "")
		</div>
		<div>
			<p class="text-sm text-gray-600 dark:text-gray-400 mb-2">Divider with text:</p>
			@ui.Divider("horizontal", "OR")
		</div>
	</div>
}

templ AccordionDemo() {
	@ui.Accordion([]ui.AccordionItem{
		{ID: "item1", Title: "What is Lite UI?", Content: Accordion1()},
		{ID: "item2", Title: "How do I install it?", Content: Accordion2()},
		{ID: "item3", Title: "Is it free to use?", Content: Accordion3()},
	}, false)
}

templ Accordion1() {
	<p>Lite UI is a lightweight component library for Go + Templ applications.</p>
}

templ Accordion2() {
	<p>Install with: <code class="px-2 py-1 bg-gray-200 dark:bg-gray-700 rounded text-sm">go get github.com/marcoschwartz/lite-ui</code></p>
}

templ Accordion3() {
	<p>Yes! Lite UI is open source and free to use under the MIT license.</p>
}

templ ModalDemo() {
	<div x-data>
		@ui.Button("Open Modal", ui.ButtonPrimary, templ.Attributes{"@click": "window.dispatchEvent(new CustomEvent('open-modal', { detail: 'layout_modal' }))"})
		@ui.Modal("layout_modal", "Example Modal", ModalContentDemo())
	</div>
}

templ ModalContentDemo() {
	<p class="text-gray-600 dark:text-gray-400">This is modal content.</p>
}

templ DrawerDemo() {
	<div x-data>
		@ui.Button("Open Drawer", ui.ButtonPrimary, templ.Attributes{"@click": "window.dispatchEvent(new CustomEvent('open-drawer', { detail: 'layout_drawer' }))"})
		@ui.Drawer("layout_drawer", "Example Drawer", DrawerContentDemo(), "right")
	</div>
}

templ DrawerContentDemo() {
	<p class="text-gray-600 dark:text-gray-400">This is drawer content.</p>
}

templ TableDemo() {
	@ui.Table([]string{"Name", "Email", "Role", "Actions"}, TableRowsDemo())
}

templ TableRowsDemo() {
	<tr>
		<td class="px-6 py-4 text-gray-900 dark:text-gray-100">John Doe</td>
		<td class="px-6 py-4 text-gray-900 dark:text-gray-100">john@example.com</td>
		<td class="px-6 py-4">@ui.Badge("Admin", "red")</td>
		<td class="px-6 py-4">
			@ui.ActionMenu([]ui.ActionMenuItem{
				{Label: "Edit", Href: "#"},
				{Label: "View Details", Href: "#"},
				{Label: "Delete", Href: "#", Danger: true, Divider: true},
			})
		</td>
	</tr>
	<tr>
		<td class="px-6 py-4 text-gray-900 dark:text-gray-100">Jane Smith</td>
		<td class="px-6 py-4 text-gray-900 dark:text-gray-100">jane@example.com</td>
		<td class="px-6 py-4">@ui.Badge("User", "blue")</td>
		<td class="px-6 py-4">
			@ui.ActionMenu([]ui.ActionMenuItem{
				{Label: "Edit", Href: "#"},
				{Label: "View Details", Href: "#"},
				{Label: "Delete", Href: "#", Danger: true, Divider: true},
			})
		</td>
	</tr>
}

templ TimelineDemo() {
	@ui.Timeline([]ui.TimelineItem{
		{Title: "Account Created", Description: "Your account was created", Time: "2h ago", Icon: ui.IconCheck("green"), Color: "green"},
		{Title: "Profile Updated", Description: "You updated your profile", Time: "1h ago", Icon: ui.IconUsers("blue"), Color: "blue"},
	})
}

templ AvatarsDemo() {
	<div class="flex gap-4 items-center">
		@ui.Avatar("https://ui-avatars.com/api/?name=John+Doe&background=6366f1&color=fff", "John Doe", "sm")
		@ui.Avatar("https://ui-avatars.com/api/?name=Jane+Smith&background=10b981&color=fff", "Jane Smith", "md")
		@ui.Avatar("https://ui-avatars.com/api/?name=Bob+Johnson&background=f59e0b&color=fff", "Bob Johnson", "lg")
	</div>
}

templ HeroDemo() {
	<div class="space-y-8">
		<div>
			<h3 class="text-sm font-medium text-gray-900 dark:text-gray-100 mb-3">Full-Width Hero</h3>
			@ui.Hero("Welcome to Lite UI", "A lightweight component library for Go + Templ applications", HeroActions(), "")
		</div>
		<div>
			<h3 class="text-sm font-medium text-gray-900 dark:text-gray-100 mb-3">Minimal Hero</h3>
			@ui.HeroMinimal("Simple and Clean", "Focus on what matters most", HeroActions())
		</div>
	</div>
}

templ HeroActions() {
	<div class="flex gap-3">
		@ui.Button("Get Started", ui.ButtonPrimary, templ.Attributes{})
		@ui.Button("Learn More", ui.ButtonSecondary, templ.Attributes{})
	</div>
}

templ FooterDemo() {
	<div>
		@ui.FooterSimple("Â© 2025 Lite UI. All rights reserved.", []ui.FooterLink{
			{Label: "About", Href: "#"},
			{Label: "Privacy", Href: "#"},
			{Label: "Terms", Href: "#"},
			{Label: "Contact", Href: "#"},
		})
	</div>
}

templ CollapseDemo() {
	<div class="space-y-4">
		@ui.Collapse("What is Lite UI?", CollapseContent1(), false)
		@ui.Collapse("How do I install it?", CollapseContent2(), false)
		@ui.Collapse("Is it open source?", CollapseContent3(), true)
	</div>
}

templ CollapseContent1() {
	<p class="text-gray-600 dark:text-gray-400">Lite UI is a lightweight, independent UI component library for Go + Templ applications.</p>
}

templ CollapseContent2() {
	<p class="text-gray-600 dark:text-gray-400">Install with: <code class="px-2 py-1 bg-gray-200 dark:bg-gray-700 rounded text-sm">go get github.com/marcoschwartz/lite-ui</code></p>
}

templ CollapseContent3() {
	<p class="text-gray-600 dark:text-gray-400">Yes! Lite UI is open source and free to use under the MIT license.</p>
}
